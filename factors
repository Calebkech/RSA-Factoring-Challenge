#!/usr/bin/python3
import sys
import os
import math

def is_prime(n):
    if n <= 1:
        return False
    if n == 2:
        return True
    if n % 2 == 0:
        return False
    sqrt_n = math.isqrt(n)
    for i in range(3, sqrt_n + 1, 2):
        if n % i == 0:
            return False
    return True

def pollards_rho(n):
    if n % 2 == 0:
        return 2
    x, y, d = 2, 2, 1
    f = lambda x: (pow(x, 2) + 1) % n
    while d == 1:
        x = f(x)
        y = f(f(y))
        d = math.gcd(abs(x-y), n)
    return d

def factorize(n):
    if is_prime(n):
        return n, 1
    p = pollards_rho(n)
    return p, n // p

def main():
    if len(sys.argv) != 2:
        print("Error: Usage - python factors.py <file>")
        sys.exit(1)

    if not os.path.isfile(sys.argv[1]):
        print(f"Error: File '{os.path.abspath(sys.argv[1])}' not found.")
        sys.exit(1)

    try:
        with open(sys.argv[1], 'r') as file:
            for line_number, line in enumerate(file, start=1):
                line = line.strip()
                if not line.isdigit():
                    print(f"Error: Invalid number '{line}' on line {line_number}.")
                    continue
                n = int(line)
                if n <= 1:
                    print(f"Error: Number must be greater than 1, got {n} on line {line_number}.")
                    continue
                p, q = factorize(n)
                print(f"{n}={p}*{q}")
    except FileNotFoundError:
        print(f"Error: File '{os.path.abspath(sys.argv[1])}' not found.")
    except PermissionError:
        print(f"Error: Permission denied for file '{os.path.abspath(sys.argv[1])}'.")
    except Exception as e:
        print(f"An unexpected error occurred: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
